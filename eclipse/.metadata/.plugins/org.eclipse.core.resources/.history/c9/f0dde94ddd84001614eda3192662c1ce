package com.FullFledgedFox.FursuitMod;

import com.FullFledgedFox.FursuitMod.help.Reference;
import com.FullFledgedFox.FursuitMod.item.ItemFoxArmor;
import com.FullFledgedFox.FursuitMod.item.ItemFoxHelmet;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemArmor;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.util.EnumHelper;

@Mod(modid = Reference.MODID, name = Reference.NAME, version = Reference.Version)

		public class FursuitMod {

	
	
	//armor
		public static Item foxHelmet;
		public static Item foxChestplate;
		public static Item foxleggings;
		public static Item foxBoots;
	
	
	
	
	//How much armor absorbs
		public static final ItemArmor.ArmorMaterial foxArmorMaterial = EnumHelper.addArmorMaterial("foxArmorMaterial",5000,new int[]{2,7,5,3},30);


	/*forge loading stuffz*/
		@Mod.EventHandler
		public void preInit(FMLPreInitializationEvent event)
		{
		//fox armor	
		foxHelmet = new ItemFoxArmor(foxArmorMaterial, 0, 0);
		foxChestplate = new ItemFoxArmor(foxArmorMaterial, 0, 0);
		foxleggings = new ItemFoxArmor(foxArmorMaterial, 0, 0);
		foxBoots = new ItemFoxArmor(foxArmorMaterial, 0, 0);
		
		
		
		
		}
		@Mod.EventHandler
		public void Init(FMLInitializationEvent event)
		{
		//armor crafting	
		GameRegistry.addRecipe(new ItemStack(foxHelmet), new Object[]{"LLL","L L", 'L', Items.leather});
		GameRegistry.addRecipe(new ItemStack(foxChestplate), new Object[]{"L L","LLL","LLL", 'L', Items.leather});
		GameRegistry.addRecipe(new ItemStack(foxleggings), new Object[]{"LLL","L L","L L", 'L', Items.leather});
		GameRegistry.addRecipe(new ItemStack(foxBoots), new Object[]{"L L","L L", 'L', Items.leather});
			
		
		
		
			
		}
		@Mod.EventHandler
		public void postInit(FMLPostInitializationEvent event)
		{
			
		}
}
